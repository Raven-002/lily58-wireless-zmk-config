/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        mod_dance: mod_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "MOD_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&to 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                            &kp N6     &kp N7    &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                             &kp Y      &kp U     &kp I      &kp O    &kp P     &kp EQUAL
&kp LSHFT  &kp A   &kp S   &kp D     &kp F     &kp G                             &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp BACKSLASH
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V     &kp B       &kp LBKT    &kp RBKT  &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp SQT
                           &kp LALT  &kp LGUI  &mod_dance  &kp ESC     &kp RET   &kp SPACE  &kp BSPC  &kp DEL
            >;
        };

        fn_layer {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                              &kp F6          &kp F7          &kp F8        &kp F9           &kp F10    &kp F11
&trans  &trans  &trans  &trans  &trans  &trans                              &trans          &trans          &kp INS       &trans           &kp PSCRN  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                              &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans     &trans
&trans  &trans  &trans  &trans  &to 3   &to 2   &to 1    &kp K_APPLICATION  &kp HOME        &kp PAGE_DOWN   &kp PG_UP     &kp END          &trans     &trans
                        &trans  &trans  &trans  &to 0    &trans             &trans          &trans          &trans
            >;
        };

        bt_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans        &to 0     &trans  &trans  &trans  &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                       &kp KP_NUMLOCK  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_SUBTRACT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &kp KP_N7       &kp KP_N8      &kp KP_N9        &kp KP_PLUS      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &kp KP_N4       &kp KP_N5      &kp KP_N6        &kp KP_EQUAL     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N0  &kp KP_N1       &kp KP_N2      &kp KP_N3        &kp KP_DOT       &trans  &trans
                        &trans  &trans  &trans  &to 0     &trans     &trans          &trans         &trans
            >;
        };
    };
};
